@import "variables";

@mixin content-width {
    margin: 0 2.5rem;
    width: calc(100% - 2.5rem * 2);

    @include is-desktop {
        max-width: 160rem;
        width: calc(100% - 15rem);
        margin: 0 auto;
    }
}

@mixin text($element) {
    @each $breakpoint, $display-settings in $font-settings {
        @if $breakpoint != small {
            @if map-has-key($font-breakpoints, $breakpoint) {
                $font-breakpoint: map-get($font-breakpoints, $breakpoint);

                @include on-min-width($font-breakpoint) {
                    @include apply-display-settings($display-settings, $element);
                }
            }
        } @else {
            @include apply-display-settings($display-settings, $element);
        }
    }
}

@mixin apply-display-settings($display-settings, $element) {
    @if map-has-key($display-settings, $element) {
        $element-settings: map-get($display-settings, $element);

        @each $property, $value in $element-settings {
            #{$property}: $value;
        }
    }
}

@mixin square ($size) {
    width: $size;
    height: $size;
}

@mixin fit-aspect-ratio($ratio) {
    &::before {
        content: "";
        display: block;
        padding-bottom: $ratio;
    }
}

@mixin transition($property, $duration) {
    transition: $property $duration;
    will-change: $property;
}

@mixin hover() {
    @media (hover: hover) {
        &:hover {
            @content;
        }
    }

    &:active {
        @content;
    }
}
//endregion

//region Media Queries
@mixin on-min-width ($min-width) {
    @media screen and (min-width: $min-width) {
        @content;
    }
}

@mixin on-max-width ($max-width) {
    @media screen and (max-width: $max-width) {
        @content;
    }
}

@mixin is-tablet {
    @include on-min-width($breakpoint-tablet) {
        @content;
    }
}

@mixin is-desktop {
    @include on-min-width($breakpoint-desktop) {
        @content;
    }
}

@mixin is-desktop-large {
    @include on-min-width($breakpoint-desktop-large) {
        @content;
    }
}

@mixin is-desktop-extra-large {
    @include on-min-width($breakpoint-desktop-extra-large) {
        @content;
    }
}
//endregion Media Queries
